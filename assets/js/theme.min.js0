//
// polyfills.js
// Theme module
//

'use strict';

// SVG
// Polyfill to solve shortcomings of SVG scaling in IE. Inspired by http://nicolasgallagher.com/canvas-fix-svg-scaling-in-internet-explorer/.

(function() {

  //
  // Variables
  //

  var svg = document.querySelectorAll('.svg-shim > svg');

  //
  // Methods
  //

  function init(elem) {
    // Get element's fill value
    var color = window.getComputedStyle(elem, null).getPropertyValue('color');

    // Get SVG's outerHTML and prepare to use it in image
    var content = new XMLSerializer().serializeToString(elem);
    content = content.replace(/currentColor/g, color);
    content = content.replace(/\s\s+/g, ' ');
    content = content.replace(/</g, '%3C');
    content = content.replace(/>/g, '%3E');
    content = content.replace(/#/g, '%23');
    content = content.replace(/"/g, "'");
    content = 'data:image/svg+xml,' + content;

    // Create a replacer image
    var img = document.createElement('img');
    img.src = content;
    img.alt = '...';

    // Replace SVG with image
    var parent = elem.parentNode;
    parent.appendChild(img);
    parent.removeChild(elem);
  }

  //
  // Events
  //

  // Only has affect in IE
  if (/MSIE \d|Trident.*rv:/.test(navigator.userAgent)) {
    [].forEach.call(svg, function(elem) {
      init(elem);
    });
  }
})();

//
// aos.js
// Theme module
//

'use strict';

(function() {

  //
  // Functions
  //
  console.log("test");
  
  function init() {
    var options = {
      duration: 700,
      easing: 'ease-out-quad',
      once: true,
      startEvent: 'load'
    }
    AOS.init(options);
  }


  //
  // Events
  //

  if (typeof AOS !== 'undefined') {
    init();
  }

})();
//
// choices.js
//

'use strict';

(function() {
  var choices = document.querySelectorAll('[data-choices]');

  function init(choice) {
    var elementOptions = choice.dataset.choices ? JSON.parse(choice.dataset.choices) : {};

    var defaultOptions = {
      searchEnabled: false,
      classNames: {
        containerInner: choice.className,
        list: 'none',
        listSingle: 'none',
        listDropdown: 'dropdown-menu',
        itemChoice: 'dropdown-item',
        activeState: 'show',
        selectedState: 'active'
      }
    };

    var options = Object.assign(defaultOptions, elementOptions);

    new Choices(choice, options);
  }

  if (typeof Choices !== 'undefined' && choices) {
    [].forEach.call(choices, function(choice) {
      init(choice);
    });
  }
})();

//
// countup.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = document.querySelectorAll('[data-toggle="countup"]');

  //
  // Functions
  //

  function init(elem) {
    var startVal = (elem.dataset.from) ? +elem.dataset.from : null;
    var endVal = (elem.dataset.to) ? +elem.dataset.to : null;
    var decimals = (elem.dataset.decimals) ? +elem.dataset.decimals : null;
    var duration = (elem.dataset.duration) ? +elem.dataset.duration : null;
    var options = (elem.dataset.options) ? JSON.parse(elem.dataset.options) : null;
    var countUp = new CountUp(elem, startVal, endVal, decimals, duration, options);

    if (!countUp.error) {
      countUp.start();
      elem.classList.add('counted');
    } else {
      console.error(countUp.error);
    }
  }

  //
  // Events
  //

  if (typeof CountUp !== 'undefined' && toggle) {
    [].forEach.call(toggle, function(el) {
      if (el.getAttribute('data-aos-id') !== 'countup:in') {
        init(el);
      }
    });
  }

  document.addEventListener('aos:in:countup:in', function(e) {
    if (e.detail instanceof Element) {
      init(e.detail);
    } else {
      var toCount = document.querySelectorAll('.aos-animate[data-aos-id="countup:in"]:not(.counted)');
      [].forEach.call(toCount, function(el) {
        init(el);
      });
    }
  });

})();

//
// dropdown.js
//

'use strict';

(function() {

  //
  // Variables
  //

  // Selectors
  var drops = document.querySelectorAll('.navbar-nav .dropdown, .navbar-nav .dropright');

  // Events
  var showEvents = ['mouseenter'];
  var hideEvents = ['mouseleave', 'click'];

  // Transition
  var transitionDuration = 200;

  // Breakpoint
  var desktopSize = 992;

  //
  // Functions
  //

  // Show drop
  function showDrop(menu) {
    if (window.innerWidth < desktopSize) {
      return;
    }

    menu.classList.add('showing');

    setTimeout(function() {
      menu.classList.remove('showing');
      menu.classList.add('show');
    }, 1);
  }

  // Hide drop
  function hideDrop(e, menu) {
    if (window.innerWidth < desktopSize) {
      return;
    }

    if (!menu.classList.contains('show')) {
      return;
    }

    if (e.type === 'click' && e.target.closest('.dropdown-menu form')) {
      return;
    }

    menu.classList.add('showing');
    menu.classList.remove('show');

    setTimeout(function() {
      menu.classList.remove('showing');
    }, transitionDuration);
  }

  //
  // Listeners
  //

  [].forEach.call(drops, function(dropdown) {
    var menu = dropdown.querySelector('.dropdown-menu');

    // Show drop
    showEvents.forEach(function(event) {
      dropdown.addEventListener(event, function() {
        showDrop(menu);
      });
    });

    // Hide drop
    hideEvents.forEach(function(event) {
      dropdown.addEventListener(event, function(e) {
        hideDrop(e, menu);
      });
    });
  });
})();

//
// dropzone.js
//

'use strict';

(function() {
  var dropzones = document.querySelectorAll('[data-dropzone]');

  function init(dropzone) {
    var currentFile = undefined;
    var elementOptions = dropzone.dataset.dropzone ? JSON.parse(dropzone.dataset.dropzone) : {};

    var defaultOptions = {
      previewsContainer: dropzone.querySelector('.dz-preview'),
      previewTemplate: dropzone.querySelector('.dz-preview').innerHTML,
      init: function() {
        this.on('addedfile', function(file) {
          var maxFiles = elementOptions.maxFiles;

          if (maxFiles == 1 && currentFile) {
            this.removeFile(currentFile);
          }

          currentFile = file;
        });
      }
    }

    var options = Object.assign(defaultOptions, elementOptions);

    // Clear preview
    dropzone.querySelector('.dz-preview').innerHTML = '';

    // Init dropzone
    new Dropzone(dropzone, options);
  }

  if (typeof Dropzone !== 'undefined' && dropzones) {

    // Global options
    Dropzone.autoDiscover = false;
    Dropzone.thumbnailWidth = null;
    Dropzone.thumbnailHeight = null;

    [].forEach.call(dropzones, function(dropzone) {
      init(dropzone);
    });
  }
})();

//
// fancybox.js
// Theme module
//

'use strict';

(function() {

  //
  // Functions
  //

  function globalOptions() {
    $.fancybox.defaults.image.preload = false;
    $.fancybox.defaults.toolbar = false;
    $.fancybox.defaults.clickContent = false;
  }

  //
  // Events
  //

  if (jQuery().fancybox) {
    globalOptions();
  }

})();

//
// Highlight.js ==================================
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = document.querySelectorAll('.highlight');


  //
  // Functions
  //

  function init(el) {
    hljs.highlightBlock(el);
  }


  //
  // Events
  //

  if (typeof hljs !== 'undefined' && toggle) {
    [].forEach.call(toggle, function(el) {
      init(el);
    });
  }

})();
//
// isotope.js
//

'use strict';

(function() {
  var $isotope = $('[data-isotope]');
  var $filter = $('[data-filter]');

  $filter.on('click', function() {
    var $this = $(this);
    var filter = $this.data('filter');
    var target = $this.data('target');

    $(target).isotope({
      filter: filter
    });
  });

  $isotope.imagesLoaded().progress(function() {
    $isotope.isotope('layout');
  });
})();

//
// map.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var map = document.querySelectorAll('[data-toggle="map"]');
  var accessToken = 'pk.eyJ1IjoiZ29vZHRoZW1lcyIsImEiOiJjanU5eHR4N2cybDU5NGVwOHZwNGprb3E0In0.msdw9q16dh8v4azJXUdiXg';

  //
  // Methods
  //

  function init(el) {
    var elementOptions = el.dataset.options;
    elementOptions = elementOptions ? JSON.parse(elementOptions) : {};
    var defaultOptions = {
      container: el,
      style: 'mapbox://styles/mapbox/light-v9',
      scrollZoom: false,
      interactive: false
    }
    var options = Object.assign(defaultOptions, elementOptions);

    // Get access token
    mapboxgl.accessToken = accessToken;

    // Init map
    new mapboxgl.Map(options);
  }

  //
  // Events
  //

  if (typeof mapboxgl !== 'undefined' && map) {
    [].forEach.call(map, function(el) {
      init(el);
    });
  }

})();

//
// modal.js
//

'use strict';

(function() {
  var modal = document.querySelectorAll('.modal');

  function overflowHide() {
    var scrollbarWidth = getScrollbarWidth();

    document.documentElement.style.overflow = 'hidden';
    document.body.style.paddingRight = scrollbarWidth + 'px';
  }

  function overflowShow() {
    document.documentElement.style.overflow = '';
    document.body.style.paddingRight = '';
  }

  function getScrollbarWidth() {
    return window.innerWidth - document.documentElement.clientWidth;
  }

  $(modal).on({
    'show.bs.modal': function() {
      overflowHide();
    },
    'hidden.bs.modal': function() {
      overflowShow();
    }
  })
})();

//
// navbar.js
// Theme module
//

'use strict';

(function() {
  var navbarTogglable = document.querySelectorAll('.navbar-togglable');
  var navbarCollapse = document.querySelectorAll('.navbar-collapse');
  var windowEvents = ['load', 'scroll'];
  var isLight = false;

  function makeNavbarDark(navbar) {
    navbar.classList.remove('navbar-light');
    navbar.classList.remove('bg-white');
    navbar.classList.add('navbar-dark');

    isLight = false;
  }

  function makeNavbarLight(navbar) {
    navbar.classList.remove('navbar-dark');
    navbar.classList.add('navbar-light');
    navbar.classList.add('bg-white');

    isLight = true;
  }

  function toggleNavbar(navbar) {
    var scrollTop = window.pageYOffset;

    if (scrollTop && !isLight) {
      makeNavbarLight(navbar);
    }

    if (!scrollTop) {
      makeNavbarDark(navbar);
    }
  }

  function overflowHide() {
    var scrollbarWidth = getScrollbarWidth();

    document.documentElement.style.overflow = 'hidden';
    document.body.style.paddingRight = scrollbarWidth + 'px';
  }

  function overflowShow() {
    document.documentElement.style.overflow = '';
    document.body.style.paddingRight = '';
  }

  function getScrollbarWidth() {
    return window.innerWidth - document.documentElement.clientWidth;
  }

  [].forEach.call(navbarTogglable, function(navbar) {
    windowEvents.forEach(function(event) {
      window.addEventListener(event, function() {
        toggleNavbar(navbar);
      });
    });
  });

  [].forEach.call(navbarCollapse, function(collapse) {
    $(collapse).on({
      'show.bs.collapse': function() {
        overflowHide();
      },
      'hidden.bs.collapse': function() {
        overflowShow();
      }
    });
  });

})();

//
// popovers.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = document.querySelectorAll('[data-toggle="popover"]');


  //
  // Functions
  //

  function init(toggle) {
    $(toggle).popover({
      template: '<div class="popover" role="tooltip"><div class="arrow"></div><h6 class="popover-header text-uppercase"></h6><div class="popover-body"></div></div>'
    });
  }


  //
  // Events
  //

  if (toggle) {
    init(toggle);
  }
  
})();
//
// pricing.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = document.querySelector('[data-toggle="price"]');
  var DURATION = 1;

  //
  // Functions
  //

  function update(e) {
    var input = e.target;
    var checked = input.checked;

    var target = input.dataset.target;
    var targets = document.querySelectorAll(target);

    [].forEach.call(targets, function(e) {
      var annual = e.dataset.annual;
      var monthly = e.dataset.monthly;
      var decimals = e.dataset.decimals ? e.dataset.decimals : null;
      var duration = e.dataset.duration ? e.dataset.duration : DURATION;
      var options = e.dataset.options ? JSON.parse(e.dataset.options) : null;

      var countUp = (!checked) ? new CountUp(e, monthly, annual, decimals, duration, options) : new CountUp(e, annual, monthly, decimals, duration, options);

      if (!countUp.error) {
        countUp.start();
      } else {
        console.error(countUp.error);
      }
    });
  }

  //
  // Events
  //

  if (typeof CountUp !== 'undefined' && toggle) {
    toggle.addEventListener('change', function(e) {
      update(e);
    });
  }

})();

//
// quill.js
//

'use strict';

(function() {
  var quills = document.querySelectorAll('[data-quill]');

  function init(quill) {
    var elementOptions = quill.dataset.quill ? JSON.parse(quill.dataset.quill) : {};

    var defaultOptions = {
      modules: {
        toolbar: [
          ['bold', 'italic'],
          ['link', 'blockquote', 'code', 'image'],
          [{
            'list': 'ordered'
          }, {
            'list': 'bullet'
          }]
        ]
      },
      theme: 'snow'
    };

    var options = Object.assign(defaultOptions, elementOptions);

    new Quill(quill, options);
  }

  if (typeof Quill !== 'undefined' && quills) {
    [].forEach.call(quills, function(quill) {
      init(quill);
    });
  }
})();

//
// smooth-scroll.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = '[data-toggle="smooth-scroll"]';

  //
  // Functions
  //

  function init(toggle) {
    var options = {
      header: '.navbar.fixed-top',
      offset: function(anchor, toggle) {
        return toggle.dataset.offset ? toggle.dataset.offset : 24;
      }
    };

    // Init
    new SmoothScroll(toggle, options);
  }

  //
  // Events
  //

  if (typeof SmoothScroll !== 'undefined' && toggle) {
    init(toggle);
  }

})();

//
// tooltip.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = document.querySelectorAll('[data-toggle="tooltip"]');


  //
  // Functions
  //

  function init(toggle) {
    $(toggle).tooltip();
  }


  //
  // Events
  //

  if (toggle) {
    init(toggle);
  }
  
})();
//
// typed.js
// Theme module
//

'use strict';

(function() {

  //
  // Variables
  //

  var toggle = document.querySelectorAll('[data-toggle="typed"]');

  //
  // Functions
  //

  function init(el) {
    var elementOptions = el.dataset.options;
    elementOptions = elementOptions ? JSON.parse(elementOptions) : {};
    var defaultOptions = {
      typeSpeed: 80,
      backSpeed: 60,
      backDelay: 1000,
      loop: true
    }
    var options = Object.assign(defaultOptions, elementOptions);

    // Init
    new Typed(el, options);
  }

  //
  // Events
  //

  if (typeof Typed !== 'undefined' && toggle) {
    [].forEach.call(toggle, function(el) {
      init(el);
    });
  }

})();
